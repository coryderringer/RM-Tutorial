{% extends "_base.htm" %}
{% block title %}
	Order effects
{% endblock%}

{% block bodycontent %}

<script type="text/javascript">

/// Checkpoint for page
  var current = 0;

/// Graph
  var file = "/static/stimuli/OrderEffects/test.csv";

/// Name variables here
	var	yLabel = "Accuracy",
		condLabel = "Exercise routine",
		xLabel = "Time (minutes)",
		covariate = "Arousal"
		xMax = 20,
		yMax = 14;

/// Text

  var text = [
    "Let’s look at the results for the experiment. On this graph, the x-axis shows the condition that the participants experience. The y-axis represents their accuracy scores on the spatial reasoning task.<br><br>Participants first go through the intense exercise regimen, and then have their spatial reasoning ability measured. Let’s look at their results!",

    "The average accuracy score after engaging in the intense exercise regimen is Y1. This seems like a pretty good average – but we need to compare this score against the control task. Next, they read a short story while sitting down before having their spatial reasoning ability measured again. Let’s take a look at their results this time around!",

    "The average accuracy score after the control condition is Y0. This is pretty similar to the previous average (after the intense exercise regiment) – it seems our hypothesis is not supported as there doesn’t seem to be a difference in their spatial reasoning ability between both the experimental and control conditions! <br><br>While it could be that your hypothesis was just wrong and intense exercise truly has no effect on one’s spatial reasoning ability, let’s look at another possible reason for this result.",

    "We believe that arousal is the mechanism that leads to an improvement in people’s spatial reasoning ability. Imagine that we had measured their arousal level throughout the experiment using a heart-rate monitor. We can plot their arousal level on the same graph with a line.",

    "When they start the experiment, their arousal level is at its baseline. When they experience the experimental condition, their arousal level increases suddenly, so it looks like the intense exercise regimen successfully manipulated the arousal of the subjects! We expected this to lead to higher accuracy scores on the spatial reasoning task.",

    "But because the exercise was so intense, their arousal levels didn’t drop off soon enough after they finished the exercise routine! We can see that it tapers off gradually, but by the time they experience the control condition, their arousal levels are still higher than before they began the experiment.",

    "This is a problem because it means their arousal levels in the control condition were much higher than they were supposed to be. It’s probably this that led to similar accuracy scores in the control condition – in terms of arousal; they were essentially still in the experimental condition!",

    "In general terms, this is called an order effect, where exposure to one condition changes a participant’s responses to a later condition. More specifically, this is an example of a carryover effect, a type of order effect where one condition ‘contaminates’ the other. This is a serious threat to internal validity in within-subjects designs because it could mean a particular condition is not manipulating the mechanisms you are interested in (in this case, arousal) the way you intend."
    ]

/// Function for noise
function randomJitter(min, max) {
  return Math.random() * (max - min) + min;
}

/// Function to move text forward and back within page
function next(current) {
    
    // Changes text
    $("#text").fadeTo(100, 0)
      .delay(200)
      .queue(function(n) { 
        $("#text").html(text[current]); 
        n();
      })
      .fadeTo(100, 1);

    // Blocks buttons for a bit
    $("#next").attr("disabled", true)
      .delay(500)
      .queue(function(n) { 
        $(this).attr("disabled", false); 
        n();
      });
    $("#previous").attr("disabled", true)
      .delay(500)
      .queue(function(n) { 
        $(this).attr("disabled", false); 
        n();
      });

    // Enables/disables right buttons at right time
    if (current==0) { $("#previous").attr("disabled", true); }
    else if (current==1) { $("#visualize").attr("disabled", false); }
    else if (current==text.length-1) { $("#next").attr("disabled", true); }
    else {
      $("#next").attr("disabled", true)
        .delay(400)
        .queue(function(n) { 
          $(this).attr("disabled", false); 
          n();
        });
      $("#previous").attr("disabled", true)
        .delay(400)
        .queue(function(n) { 
          $(this).attr("disabled", false); 
          n();
        });
    }
    
}

/// Function to change visualization in page
function visuals(current) {

  $("#visualize").attr("disabled", true);

  if (current==0) {
    svg.selectAll(".dot").transition()
      .duration(400)
      .delay(0)
      .style("opacity", 1);
  }
  else if (current==1) {
    svg.select("#pointBlocker").transition()
      .duration(400)
      .delay(0)
      .style("opacity", 0);
  }

}


</script>

<div class="pg">

	<h2><center>Order effects</center></h2>
	
	<br>
  
  <div id="text" style="display:show; height:100px" align="justify">
    <script>document.write(text[current])</script>
  </div>

  <div align="center"><button id="visualize" onclick="visuals(current)">Simulate</button></div>

  <div align="right"><button id="previous" onclick="current--; next(current)" disabled="true">&larr; Previous</button>&nbsp;&nbsp;
    <button id="next" onclick="current++; next(current);">Next &rarr;</button></div>

	<div id="graph" width="900" height="600"></div>

	<form method="post" action="/SingleSubject">
		<button>Complete Module</button>
	</form>

	<center>Or <a href="/logout">Logout.</a></center>

</div>

<style>

	body {
	  font: 14px sans-serif;
	}

	.axis path,
	.axis line {
	  fill: none;
	  stroke: #000;
	  shape-rendering: crispEdges;
	}

	.dot {
	  stroke: #000;
	}

	path { 
	    stroke: steelblue;
	    stroke-width: 2;
	    fill: none;
	}

</style>

<script type="text/javascript">

// Sets dimensions of graph and axes

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 800 - margin.left - margin.right,
    height = 400 - margin.top - margin.bottom;

var x = d3.scale.linear()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .ticks(xMax/2);

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var svg = d3.select("#graph").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  	.append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var line = d3.svg.line()
	.interpolate("cardinal")
    .x(function(d) { return x(d.t); })
    .y(function(d) { return y(d.measure); });

// Sets attributes of blockers

var lineBlockerAttr = new Object();
	lineBlockerAttr.x=width/2;
	lineBlockerAttr.y=0;

var pointBlockerAttr = new Object();
	pointBlockerAttr.x=width/2;
	pointBlockerAttr.y=0;

// Reads data from .csv file

d3.csv(file, function(error, data) {
  	if (error) throw error;

  	data.forEach(function(d) {
    	d.iv = +d.iv + randomJitter(-0.1,0.1);
    	d.dv = +d.dv;
    	d.t = +d.t;
  	});

  	// x.domain(d3.extent(data, function(d) { return d.A; })).nice();
  	// y.domain(d3.extent(data, function(d) { return d.B; })).nice();
  	x.domain([0,xMax+1]);
  	y.domain([0,yMax])

    // Appends line

    svg.append("path")
    	.attr("class", "line")
    	.style("stroke", "red")
    	.style("stroke-dasharray", "10, 5")
    	.style("opacity", 0)
        .attr("d", line(data));

    // Append line blocker

	var lineBlocker = svg.append("rect")
		.attr("width", width/2)
		.attr("height", height)
		.attr("x", function(d) {return lineBlockerAttr.x;})
		.attr("y", function(d) {return lineBlockerAttr.y;})
		.style("fill", "white")
		.style("opacity", 0);

    // Appends points

  	svg.selectAll(".dot")
      	.data(data)
   	.enter().append("circle")
      	.attr("class", "dot")
      	.attr("r", 3.5)
      	.attr("cx", function(d) { return x(d.iv); })
      	.attr("cy", function(d) { return y(d.dv); })
      	.style("fill", function(d) { return color(d.condition); })
      	.style("opacity", 0);

    // Append point blocker

    var pointBlocker = svg.append("rect")
		.attr("width", width/2)
		.attr("height", height)
		.attr("x", function(d) {return pointBlockerAttr.x;})
		.attr("y", function(d) {return pointBlockerAttr.y;})
		.style("fill", "white")
		.style("opacity", 1);

    // Appends axes

  	svg.append("g")
    	.attr("class", "x axis")
      	.attr("transform", "translate(0," + height + ")")
      	.call(xAxis)
    .append("text")
    	.attr("class", "label")
    	.attr("x", width)
    	.attr("y", -6)
    	.style("text-anchor", "end")
    	.text(xLabel);

  	svg.append("g")
      	.attr("class", "y axis")
      	.call(yAxis)
   	.append("text")
    	.attr("class", "label")
    	.attr("transform", "rotate(-90)")
    	.attr("y", 6)
    	.attr("dy", ".71em")
    	.style("text-anchor", "end")
    	.text(yLabel)

    // Appends legend

  	var legend = svg.selectAll(".legend")
      	.data(color.domain())
    .enter().append("g")
      	.attr("class", "legend")
      	.attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });

  	legend.append("rect")
      	.attr("x", width - 18)
      	.attr("width", 18)
      	.attr("height", 18)
      	.style("fill", color);

  	legend.append("text")
      	.attr("x", width - 24)
      	.attr("y", 9)
      	.attr("dy", ".35em")
      	.style("text-anchor", "end")
      	.text(function(d) { return d; });

    svg.append("rect")
    	.attr("x", width - 18)
    	.attr("y", 50)
      	.attr("width", 18)
      	.attr("height", 2)
      	.style("fill", "red");

    svg.append("text")
      	.attr("x", width - 24)
      	.attr("y", 50)
      	.attr("dy", ".35em")
      	.style("text-anchor", "end")
      	.text(covariate);

    var legendBlocker = svg.append("rect")
      .attr("width", 150)
      .attr("height", 20)
      .attr("x", width - 150)
      .attr("y", 40)
      .style("fill", "white")
      .style("opacity", 1);

});

</script>
{% endblock %}
